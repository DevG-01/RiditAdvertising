{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devch\\\\Desktop\\\\groq project\\\\RiditAdvertising\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Fetch test endpoint\n    axios.get(`${process.env.REACT_APP_API_URL}/api/test`).then(response => {\n      setMessage(response.data.message);\n    }).catch(err => {\n      console.error('Error fetching test endpoint:', err);\n      setError('Failed to connect to backend');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ridit Advertising\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Backend says: \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2ZgoBJksVb/V+EjcSK1rllAdBQ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","message","setMessage","error","setError","get","process","env","REACT_APP_API_URL","then","response","data","catch","err","console","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["C:/Users/devch/Desktop/groq project/RiditAdvertising/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    // Fetch test endpoint\n    axios.get(`${process.env.REACT_APP_API_URL}/api/test`)\n      .then(response => {\n        setMessage(response.data.message);\n      })\n      .catch(err => {\n        console.error('Error fetching test endpoint:', err);\n        setError('Failed to connect to backend');\n      });\n  }, []);\n\n  return (\n    <div style={{ padding: '20px', textAlign: 'center' }}>\n      <h1>Ridit Advertising</h1>\n      {message && <p>Backend says: {message}</p>}\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACS,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,WAAW,CAAC,CACnDC,IAAI,CAACC,QAAQ,IAAI;MAChBR,UAAU,CAACQ,QAAQ,CAACC,IAAI,CAACV,OAAO,CAAC;IACnC,CAAC,CAAC,CACDW,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACX,KAAK,CAAC,+BAA+B,EAAEU,GAAG,CAAC;MACnDT,QAAQ,CAAC,8BAA8B,CAAC;IAC1C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKiB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnDpB,OAAA;MAAAoB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBrB,OAAO,iBAAIH,OAAA;MAAAoB,QAAA,GAAG,gBAAc,EAACjB,OAAO;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCnB,KAAK,iBAAIL,OAAA;MAAGiB,KAAK,EAAE;QAAEQ,KAAK,EAAE;MAAM,CAAE;MAAAL,QAAA,GAAC,SAAO,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAACtB,EAAA,CAvBQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}